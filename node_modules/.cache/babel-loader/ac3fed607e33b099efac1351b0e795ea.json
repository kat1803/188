{"ast":null,"code":"const deprecatedKeys = ['tabBar'];\n/**\n * Make sure screen options returned by the `getScreenOption`\n * are valid\n */\n\nexport default ((screenOptions, route) => {\n  const keys = Object.keys(screenOptions);\n  const deprecatedKey = keys.find(key => deprecatedKeys.includes(key));\n\n  if (typeof screenOptions.title === 'function') {\n    throw new Error([\"`title` cannot be defined as a function in navigation options for `\".concat(route.routeName, \"` screen. \\n\"), 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {\n    throw new Error([\"`\".concat(deprecatedKey, \"` cannot be defined as a function in navigation options for `\").concat(route.routeName, \"` screen. \\n\"), 'Try replacing the following:', '{', \"    \".concat(deprecatedKey, \": ({ state }) => ({\"), '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', \"    \".concat(deprecatedKey, \"Key: navigation.state...\"), '})'].join('\\n'));\n  }\n\n  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {\n    throw new Error([\"Invalid key `\".concat(deprecatedKey, \"` defined in navigation options for `\").concat(route.routeName, \"` screen.\"), '\\n', 'Try replacing the following navigation options:', '{', \"    \".concat(deprecatedKey, \": {\"), ...Object.keys(screenOptions[deprecatedKey]).map(key => \"        \".concat(key, \": ...,\")), '    },', '}', '\\n', 'with:', '{', ...Object.keys(screenOptions[deprecatedKey]).map(key => \"    \".concat(deprecatedKey + key[0].toUpperCase() + key.slice(1), \": ...,\")), '}'].join('\\n'));\n  }\n});","map":null,"metadata":{},"sourceType":"module"}