{"ast":null,"code":"var _jsxFileName = \"/Users/kathryn/Documents/GitHub/188/src/App.js\";\nimport \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\"; //import About from './About.js';\n\nconst styles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(2),\n    marginTop: 10,\n    marginBottom: 10\n  },\n  textfield: {\n    margin: theme.spacing(2)\n  },\n  paper: {\n    verticalAlign: \"middle\",\n    width: 400\n  },\n  container: {\n    display: \"flex\",\n    margin: theme.spacing(5),\n    marginLeft: 300\n  }\n}));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      project_name: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      goal: 0,\n      about: false\n    };\n  }\n\n  setExample1() {\n    this.setState({\n      about: false,\n      project_name: \"Worlds & Creatures, the Art of Anthony Christou\",\n      start_date: \"2017-05-08\",\n      end_date: \"2017-05-29\",\n      goal: \"5000\",\n      description: \"A 100 page Artbook featuring the work of Anthony Christou over the last 5 years. Art from the genres of fantasy, myths, horror & more.\"\n    });\n  }\n\n  setExample2() {\n    this.setState({\n      about: false,\n      project_name: \"MOVIE - Messages\",\n      start_date: \"2017-02-21\",\n      end_date: \"2017-02-23\",\n      goal: \"2500000\",\n      description: \"Humanity is slowly altering the world in a dangerous way. Someone realises this and reaches out to humanity, but needs to work out how.\t\"\n    });\n  }\n\n  setHome() {\n    this.setState({\n      project_name: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      goal: 0,\n      about: false\n    });\n  }\n\n  setAbout() {\n    this.setState({\n      about: true\n    });\n  }\n\n  descriptionUpdate(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  projectNameUpdate(event) {\n    this.setState({\n      project_name: event.target.value\n    });\n  }\n\n  startDateUpdate(event) {\n    this.setState({\n      start_date: event.target.value\n    });\n  }\n\n  endDateUpdate(event) {\n    this.setState({\n      end_date: event.target.value\n    });\n  }\n\n  goalUpdate(event) {\n    this.setState({\n      goal: event.target.value\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    const classes = this.props.classes;\n    dt1 = new Date(this.state.start_date);\n    dt2 = new Date(this.state.end_date);\n    Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) / (1000 * 60 * 60 * 24));\n    var features = {\n      goal: this.state.goal,\n      name_length: this.state.project_name.length,\n      description_length: this.state.description.length\n    };\n    var transform = {};\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" Welcome to Kickstarter Prediction\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      className: classes.button,\n      onClick: () => this.setHome(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Home\"), React.createElement(Button, {\n      color: \"secondary\",\n      className: classes.button,\n      onClick: () => this.setExample1(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Project example 1\"), React.createElement(Button, {\n      color: \"secondary\",\n      className: classes.button,\n      onClick: () => this.setExample2(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Project example 2\"), React.createElement(Button, {\n      color: \"secondary\",\n      className: classes.button,\n      onClick: () => this.setAbout(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"About\"))), this.state.about ? \"About blah blah blah\" : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Please enter your project details for prediction\"), React.createElement(TextField, {\n      id: \"outlined-basic\",\n      className: classes.textfield,\n      label: \"Project name\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: this.projectNameUpdate.bind(this),\n      value: this.state.project_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"date\",\n      label: \"Project startdate\",\n      type: \"date\",\n      variant: \"outlined\",\n      className: classes.textfield,\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: this.startDateUpdate.bind(this),\n      value: this.state.start_date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"date\",\n      label: \"End date\",\n      type: \"date\",\n      variant: \"outlined\",\n      className: classes.textfield,\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: this.endDateUpdate.bind(this),\n      value: this.state.end_date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"outlined-basic\",\n      className: classes.textfield,\n      label: \"Goal\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: this.goalUpdate.bind(this),\n      value: this.state.goal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: classes.textfield,\n      id: \"outlined-multiline-static\",\n      label: \"Blurb\",\n      multiline: true,\n      rows: \"4\" //defaultValue=\"Please enter your project description\"\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: this.descriptionUpdate.bind(this),\n      value: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Start to predict\")), React.createElement(Paper, {\n      style: {\n        marginLeft: 50,\n        width: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Prediction Result\"), Object.keys(features).map((key, index) => React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, key, \": \", features[key]))))));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/kathryn/Documents/GitHub/188/src/App.js"],"names":["makeStyles","Typography","TextField","withStyles","Paper","React","Component","Button","styles","theme","button","margin","spacing","marginTop","marginBottom","textfield","paper","verticalAlign","width","container","display","marginLeft","App","constructor","props","state","project_name","description","start_date","end_date","goal","about","setExample1","setState","setExample2","setHome","setAbout","descriptionUpdate","event","target","value","projectNameUpdate","startDateUpdate","endDateUpdate","goalUpdate","render","console","log","classes","dt1","Date","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","features","name_length","length","description_length","transform","bind","shrink","Object","keys","map","key","index"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, TextField } from \"@material-ui/core\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n//import About from './About.js';\n\nconst styles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(2),\n    marginTop: 10,\n    marginBottom: 10\n  },\n  textfield: {\n    margin: theme.spacing(2)\n  },\n  paper: {\n    verticalAlign: \"middle\",\n    width: 400\n  },\n  container: {\n    display: \"flex\",\n    margin: theme.spacing(5),\n    marginLeft: 300\n  }\n}));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      project_name: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      goal: 0,\n      about: false\n    };\n  }\n\n  setExample1() {\n    this.setState({\n      about: false,\n      project_name: \"Worlds & Creatures, the Art of Anthony Christou\",\n      start_date: \"2017-05-08\",\n      end_date: \"2017-05-29\",\n      goal: \"5000\",\n      description:\n        \"A 100 page Artbook featuring the work of Anthony Christou over the last 5 years. Art from the genres of fantasy, myths, horror & more.\"\n    });\n  }\n  setExample2() {\n    this.setState({\n      about: false,\n      project_name: \"MOVIE - Messages\",\n      start_date: \"2017-02-21\",\n      end_date: \"2017-02-23\",\n      goal: \"2500000\",\n      description:\n        \"Humanity is slowly altering the world in a dangerous way. Someone realises this and reaches out to humanity, but needs to work out how.\t\"\n    });\n  }\n  setHome() {\n    this.setState({\n      project_name: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      goal: 0,\n      about: false\n    });\n  }\n\n  setAbout() {\n    this.setState({\n      about: true\n    });\n  }\n\n  descriptionUpdate(event) {\n    this.setState({ description: event.target.value });\n  }\n  projectNameUpdate(event) {\n    this.setState({ project_name: event.target.value });\n  }\n  startDateUpdate(event) {\n    this.setState({ start_date: event.target.value });\n  }\n  endDateUpdate(event) {\n    this.setState({ end_date: event.target.value });\n  }\n  goalUpdate(event) {\n    this.setState({ goal: event.target.value });\n  }\n\n  render() {\n    console.log(this.state);\n    const classes = this.props.classes;\n    dt1 = new Date(this.state.start_date);\n    dt2 = new Date(this.state.end_date);\n    Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate()) ) /(1000 * 60 * 60 * 24));\n    var features = {\n      goal: this.state.goal,\n      name_length: this.state.project_name.length,\n      description_length: this.state.description.length,\n    };\n    var transform = {\n      \n    };\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1> Welcome to Kickstarter Prediction</h1>\n          <div>\n            <Button\n              color=\"secondary\"\n              className={classes.button}\n              onClick={() => this.setHome()}\n            >\n              Home\n            </Button>\n            <Button\n              color=\"secondary\"\n              className={classes.button}\n              onClick={() => this.setExample1()}\n            >\n              Project example 1\n            </Button>\n            <Button\n              color=\"secondary\"\n              className={classes.button}\n              onClick={() => this.setExample2()}\n            >\n              Project example 2\n            </Button>\n            <Button\n              color=\"secondary\"\n              className={classes.button}\n              onClick={() => this.setAbout()}\n            >\n              About\n            </Button>\n          </div>\n        </header>\n\n        {this.state.about ? (\n          \"About blah blah blah\"\n        ) : (\n          <h2>\n            <div className={classes.container}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h5\">\n                  Please enter your project details for prediction\n                </Typography>\n                <TextField\n                  id=\"outlined-basic\"\n                  className={classes.textfield}\n                  label=\"Project name\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={this.projectNameUpdate.bind(this)}\n                  value={this.state.project_name}\n                />\n                <TextField\n                  id=\"date\"\n                  label=\"Project startdate\"\n                  type=\"date\"\n                  variant=\"outlined\"\n                  className={classes.textfield}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  onChange={this.startDateUpdate.bind(this)}\n                  value={this.state.start_date}\n                />\n                <TextField\n                  id=\"date\"\n                  label=\"End date\"\n                  type=\"date\"\n                  variant=\"outlined\"\n                  className={classes.textfield}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  onChange={this.endDateUpdate.bind(this)}\n                  value={this.state.end_date}\n                />\n                <TextField\n                  id=\"outlined-basic\"\n                  className={classes.textfield}\n                  label=\"Goal\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={this.goalUpdate.bind(this)}\n                  value={this.state.goal}\n                />\n                <TextField\n                  className={classes.textfield}\n                  id=\"outlined-multiline-static\"\n                  label=\"Blurb\"\n                  multiline\n                  rows=\"4\"\n                  //defaultValue=\"Please enter your project description\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={this.descriptionUpdate.bind(this)}\n                  value={this.state.description}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                >\n                  Start to predict\n                </Button>\n              </Paper>\n              <Paper style={{ marginLeft: 50, width: 400 }}>\n                <h2>Prediction Result</h2>\n                {Object.keys(features).map((key, index) => (\n                  <p key={index}>{key}: {features[key]}</p>\n                ))}\n              </Paper>\n            </div>\n          </h2>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}