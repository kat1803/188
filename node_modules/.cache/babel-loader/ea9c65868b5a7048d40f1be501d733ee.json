{"ast":null,"code":"import invariant from '../utils/invariant';\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\n\nexport default function getScreenForRouteName(routeConfigs, routeName) {\n  const routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(\"There is no route defined for key \".concat(routeName, \".\\n\") + \"Must be one of: \".concat(Object.keys(routeConfigs).map(a => \"'\".concat(a, \"'\")).join(',')));\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    const screen = routeConfig.getScreen();\n    invariant(typeof screen === 'function', \"The getScreen defined for route '\".concat(routeName, \" didn't return a valid \") + 'screen or navigator.\\n\\n' + 'Please pass it like this:\\n' + \"\".concat(routeName, \": {\\n  getScreen: () => require('./MyScreen').default\\n}\"));\n    return screen;\n  }\n\n  return routeConfig;\n}","map":null,"metadata":{},"sourceType":"module"}