{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["styles","button","margin","marginTop","marginBottom","textfield","paper","flexDirection","width","container","display","marginLeft","App","props","state","project_name","description","start_date","category","end_date","prediction","goal","about","callAPI","bind","this","Length_of_kick","Date","getTime","fetch","response","json","result","console","log","setState","error","alert","categories","dt1","classes","dt2","days","Math","floor","UTC","getFullYear","getMonth","getDate","isNaN","parseInt","features","name_length","length","description_length","indexOf","transform","publishing","art","fashion","comics","games","design","crafts","journalism","food","music","photography","technology","theater","dance","coefs","total","key","pow","E","className","Button","color","onClick","setHome","style","setExample1","setExample2","setAbout","Paper","alignSelf","fontSize","verticalAlign","Typography","variant","InputLabel","id","Select","labelId","value","onChange","event","target","map","MenuItem","TextField","label","type","InputLabelProps","shrink","multiline","rows","Object","keys","index","toFixed","Component","withStyles","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87c06f3d.chunk.js","sourcesContent":["import \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, TextField } from \"@material-ui/core\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { red } from \"@material-ui/core/colors\";\n//import About from './About.js';\n\nconst styles = {\n  button: {\n    margin: 2,\n    marginTop: 10,\n    marginBottom: 10\n  },\n  textfield: {\n    margin: 2,\n    marginTop: 25\n  },\n  paper: {\n    flexDirection: 'row',\n    width: 600\n  },\n  container: {\n    display: \"flex\",\n    margin: 5,\n    marginLeft: 300\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      project_name: \"\",\n      description: \"\",\n      start_date: \"\",\n      category: \"\",\n\t  end_date: \"\",\n\t  prediction: 0,\n      goal: 0,\n      about: false\n\t};\n\tthis.callAPI = this.callAPI.bind(this)\n  }\n\n  async callAPI(){\n\t  let {goal, description, start_date, end_date, project_name, category} = this.state\n\t  if (      \n\t\t  project_name !== \"\" &&\n\t      description !== \"\" &&\n\t      start_date !== \"\" &&\n\t      category !== \"\" &&\n\t\t  end_date !== \"\"\n\t\t  ){\n\t\t\tconst Length_of_kick = (new Date(end_date).getTime() - new Date(start_date).getTime())/(1000*60*60*24)\n\t\t\t  try {\n\t\t\t\t  const response = await fetch(`http://localhost:8000/predict?goal=${goal}&name=${project_name}&blurb=${description}&Length_of_kick=${Length_of_kick}`);\n\t\t\t\t  const result = await response.json();\n\t\t\t\t  console.log('Success:', result);\n\t\t\t\t  this.setState({prediction: result.result})\n\t\t\t\t} catch (error) {\n\t\t\t\t  console.error('Error:', error);\n\t\t\t\t}\n\t\t\t  \n\t\t  }\n\t\t  else{\n\t\t\t  alert(\"Please enter all input!\")\n\t\t  }\n  }\n\n  setExample1() {\n    this.setState({\n      about: false,\n      category: \"comics\",\n      project_name: \"The Postnatalist - Second issue comic book\",\n      start_date: \"2014-12-12\",\n      end_date: \"2015-01-26\",\n      goal: \"300\",\n      description:\n        \"The Postnatalist explores feminist issues involving women's rights to occupy public spaces. World's first middle-aged female superhero.\"\n    });\n  }\n  setExample2() {\n    this.setState({\n      about: false,\n      category: \"technology\",\n      project_name: \"DSM-5 Cats\",\n      start_date: \"2014-12-16\",\n      end_date: \"2015-01-15\",\n      goal: \"300\",\n      description:\n        \"Using GPS tracking data on cat movements I applied the DSM-5 criteria to label them all with disorders based on 24 hours of data.\"\n    });\n  }\n  setHome() {\n    this.setState({\n      project_name: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      category: \"\",\n      goal: 0,\n      about: false\n    });\n  }\n\n  setAbout() {\n    this.setState({\n      about: true\n    });\n  }\n/*\n  descriptionUpdate(event) {\n    this.setState({ description: event.target.value });\n  }\n  projectNameUpdate(event) {\n    this.setState({ project_name: event.target.value });\n  }\n  startDateUpdate(event) {\n    this.setState({ start_date: event.target.value });\n  }\n  endDateUpdate(event) {\n    this.setState({ end_date: event.target.value });\n  }\n  goalUpdate(event) {\n    this.setState({ goal: event.target.value });\n  }\n  categoryUpdate(event) {\n    this.setState({ category: event.target.value });\n  }\n*/\n  render() {\n    var categories = [\n      \"publishing\",\n      \"art\",\n      \"fashion\",\n      \"comics\",\n      \"games\",\n      \"film&video\",\n      \"design\",\n      \"crafts\",\n      \"journalism\",\n      \"food\",\n      \"music\",\n      \"photography\",\n      \"technology\",\n      \"theater\",\n      \"dance\"\n    ];\n    const classes = this.props.classes;\n    var dt1 = new Date(this.state.start_date);\n    var dt2 = new Date(this.state.end_date);\n    var days = Math.floor(\n      (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n        Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n        (1000 * 60 * 60 * 24)\n    );\n    if (isNaN(days) || days < 0) {\n      days = 0;\n    }\n    var goal = parseInt(this.state.goal);\n    var features = {\n      goal: isNaN(goal) ? 0 : goal,\n      name_length: this.state.project_name.length,\n      description_length: this.state.description.length,\n      days: days\n    };\n    if (categories.indexOf(this.state.category) > -1) {\n      features[this.state.category] = 1.0;\n    }\n    var transform = {\n      goal: 100000000.0,\n      name_length: 242,\n      description_length: 763,\n      days: 92,\n      publishing: 1,\n      art: 1,\n      fashion: 1,\n      comics: 1,\n      games: 1,\n      \"film&video\": 1,\n      design: 1,\n      crafts: 1,\n      journalism: 1,\n      food: 1,\n      music: 1,\n      photography: 1,\n      technology: 1,\n      theater: 1,\n      dance: 1\n    };\n    var coefs = {\n      goal: -4.2221198241883995,\n      name_length: 4.145044195316219,\n      description_length: -0.6202055266240084,\n      days: -1.991208065816051,\n      publishing: -0.3776067434848402,\n      art: -0.20885380796643244,\n      fashion: -0.26289449342401283,\n      comics: 0.9099633593130975,\n      games: 0.5973826097934369,\n      \"film&video\": 0.1320937998119649,\n      design: 2.0821077631224947,\n      crafts: -0.9927932045870127,\n      journalism: -1.3679535879868938,\n      food: -0.8497531396038208,\n      music: 0.45272430045111817,\n      photography: -0.5736926094462507,\n      technology: -0.8641835291452311,\n      theater: 0.514510919036007,\n      dance: 0.8633542221158385,\n    };\n    var intercept = 0.05440586;\n    \n    var total = intercept;\n    for (var key in features) {\n      total += (coefs[key] * features[key]) / transform[key];\n    }\n    var pct_predict = (100 * 1) / (1 + Math.pow(Math.E, -1 * total));\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1> Welcome to Kickstarter Prediction</h1>\n          <div>\n            <Button\n              color=\"secondary\"\n              onClick={() => this.setHome()}\n            >\n              Home\n            </Button>\n            <Button\n              color=\"secondary\"\n              style={styles.button}\n              onClick={() => this.setExample1()}\n            >\n              Project example 1\n            </Button>\n            <Button\n              color=\"secondary\"\n              //className={classes.button}\n              onClick={() => this.setExample2()}\n            >\n              Project example 2\n            </Button>\n            <Button\n              color=\"secondary\"\n              //className={classes.button}\n              onClick={() => this.setAbout()}\n            >\n              About\n            </Button>\n          </div>\n        </header>\n\n        {this.state.about ? (\n          <Paper style={{alignSelf:'center', width: 500, margin:10, marginLeft: '30%', fontSize: 25}}>\n            <br/>\n            Kickstarter prediction is the website that allow people to enter their project and predict the probability of achiveing their goal.\n            <br/>\n            <br/>\n            Hope you can test it and enjoy it. \n            <br/>\n            <br/>\n            and give us some feedback\n            <br/>\n            <br/>\n            Developers for this project are:\n            <br/>\n            <br/>\n            Nhi Tran \n            <br/>\n            <br/>\n            Phuc Le \n            <br/>\n            <br/>\n            Zhonglin \n            <br/>\n            <br/>\n            Thank you\n            <br/>\n            <br/>\n          </Paper>\n          \n        ) : (\n          <h2>\n            <div style={styles.container}>\n              <Paper style={{verticalAlign: \"middle\", width: 400}}>\n                <Typography variant=\"h5\">\n                  Please enter your project details for prediction\n                </Typography>\n                <div>\n                <InputLabel id=\"label1\">Category</InputLabel>\n                <Select\n                style={styles.textfield}\n                  labelId=\"label1\"\n                  id=\"label\"\n                  value={this.state.category.value}\n                  onChange={(event)=> this.setState({category: event.target.value })}\n                >\n                  {categories.map(category => (\n                    <MenuItem value={category}>{category}</MenuItem>\n                  ))}\n                </Select>\n                </div>\n                <TextField\n                  id=\"outlined-basic\"\n                  style={styles.textfield}\n                  label=\"Project name\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={(event)=> this.setState({project_name: event.target.value })}\n                  value={this.state.project_name}\n                />\n                <TextField\n                style={styles.textfield}\n                  id=\"date\"\n                  label=\"Project startdate\"\n                  type=\"date\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  onChange={(event)=> this.setState({start_date: event.target.value })}\n                  value={this.state.start_date}\n                />\n                <TextField\n                style={styles.textfield}\n                  id=\"date\"\n                  label=\"End date\"\n                  type=\"date\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n\t\t\t\t  onChange={(event)=> this.setState({end_date: event.target.value })}\n                  value={this.state.end_date}\n                />\n                <TextField\n                  id=\"outlined-basic\"\n                  style={styles.textfield}\n                  label=\"Goal\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={(event)=> this.setState({goal: event.target.value })}\n                  value={this.state.goal}\n                />\n                <TextField\n                  style={styles.textfield}\n                  id=\"outlined-multiline-static\"\n                  label=\"Blurb\"\n                  multiline\n                  rows=\"4\"\n                  //defaultValue=\"Please enter your project description\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={(event)=> this.setState({description: event.target.value })}\n                  value={this.state.description}\n                />\n                 <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n\t\t\t\t  style={styles.button}\n\t\t\t\t  onClick={this.callAPI}\n                >\n                  Start to predict\n                </Button>\n              </Paper>\n              <Paper style={styles.paper}>\n                <h2>Features</h2>\n                  <Typography style={{fontSize:25}}>\n                  {Object.keys(features).map((key, index) => (\n                  <p key={index}>\n                    {key}: {features[key]}\n                  </p>\n                ))}\n                  </Typography>\n                \n                <h2>Prediction Result</h2>\n                <p >\n                  {(this.state.prediction*100).toFixed(1)} % chance of meeting the\n                  goal\n                </p>\n                {/* <p >\n                  {Math.round(pct_predict * 10) / 10} % chance of meeting the\n                  goal\n                </p> */}\n              </Paper>\n            </div>\n          </h2>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}